apply plugin: "eclipse"
apply plugin: "war"
apply plugin: "eclipse-wtp"
apply plugin: "tomcat"

aspectJVersion = "1.6.9"
hibernateValidatorVersion = "4.2.0.Final"
jacksonVersion = "1.9.9"
mockitoVersion = "1.8.5"
neo4jVersion = "1.6.3"
springDataNeo4jVersion = "2.0.1.RELEASE"
springMobileVersion = "1.0.0.RELEASE"
springVersion = "3.1.2.RELEASE"
tomcatVersion = "7.0.11"

configurations {
    all*.exclude group: "javax.mail"
    all*.exclude group: "javax.jms"
    all*.exclude group: "com.sun.jdmk"
    all*.exclude group: "com.sun.jmx"
}

dependencies {
	compile ("org.springframework:spring-context:$springVersion") {
		exclude module: "commons-logging"
	}
    compile "org.springframework:spring-aspects:$springVersion"
    compile "org.springframework:spring-beans:$springVersion"
    compile "org.springframework:spring-core:$springVersion"
	compile "org.springframework:spring-webmvc:$springVersion"
	compile "org.springframework:spring-tx:$springVersion"
	compile "org.springframework.mobile:spring-mobile-device:$springMobileVersion"
	compile ("org.springframework.data:spring-data-neo4j:$springDataNeo4jVersion") {
	   exclude group: "org.springframework"
	}
	compile "org.neo4j:neo4j:$neo4jVersion"
    compile "org.neo4j:neo4j-cypher:$neo4jVersion"
    compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    compile "org.aspectj:aspectjrt:$aspectJVersion"
    compile "cglib:cglib-nodep:2.2"
	compile "org.slf4j:slf4j-api:1.5.10"
	compile "org.slf4j:jcl-over-slf4j:1.5.10"
	compile "org.slf4j:slf4j-log4j12:1.5.10"
	compile "javax.inject:javax.inject:1"
	compile "javax.servlet:jstl:1.2"
    providedCompile ("javax.servlet:javax.servlet-api:3.0.1") { provided = true }
    providedCompile ("javax.servlet.jsp:jsp-api:2.1") { provided = true }
	testCompile "org.springframework:spring-test-mvc:1.0.0.BUILD-SNAPSHOT"
	testCompile "junit:junit:4.8.1"
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
         "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
      exclude group: "org.eclipse.jdt.core.compiler", module: "ecj"
  }

}

repositories {
	mavenRepo urls: "https://maven.springframework.org/release"
	mavenRepo urls: "https://maven.springframework.org/milestone"
	mavenRepo urls: "https://maven.springframework.org/snapshot"
	mavenRepo urls: "https://download.java.net/maven/2"
	maven { url 'https://repo.maven.apache.org/maven2/' }
}

task wrapper(type: Wrapper) {
    gradleVersion = "1.1"
}

task lumbar(type: Exec) {
  lumbarCommandLine = ["lumbar", "build", "src/main/thorax/lumbar.json", "src/main/webapp/thorax"]
  commandLine lumbarCommandLine
}

task lumbarWatch(type: Exec) {
  lumbarCommandLine = ["lumbar", "watch", "src/main/thorax/lumbar.json", "src/main/webapp/thorax"]
  commandLine lumbarCommandLine
}

war.dependsOn { lumbar }

tomcatRun.dependsOn { lumbar }
tomcatRun {
    contextPath = "thorax-client"
}

tomcatRunWar.dependsOn { lumbar }
tomcatRunWar {
    contextPath = "thorax-client"
}

buildscript {
    repositories {
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = "GitHub"
            addArtifactPattern "https://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]"
        }
    }

    dependencies {
        classpath "bmuschko:gradle-tomcat-plugin:0.9.5"
    }
}